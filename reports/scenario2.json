{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2025-08-21T11:23:55.971Z",
    "end": "2025-08-21T11:25:29.777Z",
    "duration": 93806,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "310413d3-f821-4815-b5d1-186e51431c09",
      "title": "",
      "fullFile": "C:\\Users\\LENOV0\\Desktop\\automation-framework\\selenium-task4\\tests\\scenario3.test.js",
      "file": "\\tests\\scenario3.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b82c0093-3274-4d5f-b25f-08125abab91f",
          "title": "Task 4 - Automation Test Store",
          "fullFile": "C:\\Users\\LENOV0\\Desktop\\automation-framework\\selenium-task4\\tests\\scenario3.test.js",
          "file": "\\tests\\scenario3.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Task 4 - Automation Test Store\"",
              "fullTitle": "Task 4 - Automation Test Store \"before all\" hook in \"Task 4 - Automation Test Store\"",
              "timedOut": false,
              "duration": 2340,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await createDriver();\nloginPage = new LoginPage(driver);\nproductListingPage = new ProductListingPage(driver);",
              "err": {},
              "uuid": "46d34775-893e-4115-8d38-41c6b589a8d6",
              "parentUUID": "b82c0093-3274-4d5f-b25f-08125abab91f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Task 4 - Automation Test Store\"",
              "fullTitle": "Task 4 - Automation Test Store \"after all\" hook in \"Task 4 - Automation Test Store\"",
              "timedOut": false,
              "duration": 399,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "aa93dfa5-f568-4cc3-b0a9-368989b0272d",
              "parentUUID": "b82c0093-3274-4d5f-b25f-08125abab91f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Scenario 3: Check sale & stock in category",
              "fullTitle": "Task 4 - Automation Test Store Scenario 3: Check sale & stock in category",
              "timedOut": false,
              "duration": 91051,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180000);\nawait loginPage.open();\nawait loginPage.clickLoginLink();\nawait loginPage.login(config.username, config.password);\n// ✅ Navigate to category\nawait productListingPage.openCategory();\nawait productListingPage.scrollPage();\nconst allProducts = await productListingPage.getAllProducts();\nlet saleCount = 0,\n  saleOutOfStockCount = 0,\n  totalOutOfStockCount = 0;\nfor (let i = 0; i < allProducts.length; i++) {\n  const card = allProducts[i];\n  const isOnSale =\n    (await card.findElements(By.xpath(\".//span[contains(@class,'sale')]\")))\n      .length > 0;\n  const isOutOfStock =\n    (\n      await card.findElements(\n        By.css(\".outofstock, .out-of-stock, .nostock, .soldout, .sold-out\")\n      )\n    ).length > 0 ||\n    (\n      await card.findElements(\n        By.xpath(\".//*[contains(normalize-space(.), 'Out of Stock')]\")\n      )\n    ).length > 0;\n  if (isOnSale) {\n    saleCount++;\n    if (isOutOfStock) {\n      saleOutOfStockCount++;\n      totalOutOfStockCount++;\n      console.log(`Product ${i + 1}: On sale but out of stock.`);\n    } else {\n      let added = false;\n      try {\n        let addButtons = await card.findElements(\n          By.xpath(\".//a[@title='Add to Cart']\")\n        );\n        if (addButtons.length > 0) {\n          await addButtons[0].click();\n          added = true;\n          await driver.sleep(400); // ⏳ kam delay after add\n        }\n      } catch (_) {}\n      console.log(\n        `Product ${i + 1}: On sale ${\n          added ? \"and added\" : \"(button not found)\"\n        }`\n      );\n    }\n  } else {\n    if (isOutOfStock) {\n      totalOutOfStockCount++;\n      console.log(`Product ${i + 1}: Not on sale but out of stock.`);\n    } else {\n      console.log(`Product ${i + 1}: Not on sale and in stock.`);\n    }\n  }\n}\nconsole.log(`On sale items: ${saleCount}`);\nconsole.log(`On sale but out of stock: ${saleOutOfStockCount}`);\nconsole.log(`Total out of stock products: ${totalOutOfStockCount}`);\nconsole.log(`Total products: ${allProducts.length}`);",
              "err": {},
              "uuid": "751803a1-46fc-4a60-a254-1939409662d6",
              "parentUUID": "b82c0093-3274-4d5f-b25f-08125abab91f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "751803a1-46fc-4a60-a254-1939409662d6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 91051,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 60000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.7.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "scenario2",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports",
        "reportFilename": "scenario2"
      },
      "version": "6.2.0"
    }
  }
}